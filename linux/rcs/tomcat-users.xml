<?xml version='1.0' encoding='utf-8'?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<tomcat-users>
<!--
  NOTE:  By default, no user is included in the "manager-gui" role required
  to operate the "/manager/html" web application.  If you wish to use this app,
  you must define such a user - the username and password are arbitrary.
-->
<!--
  NOTE:  The sample user and role entries below are wrapped in a comment
  and thus are ignored when reading this file. Do not forget to remove
  <!.. ..> that surrounds them.
-->

<!-- File: /etc/tomcat7/tomcat-users.xml -->
<!-- managers are new roles, which is added in tomcat7. -->
<!-- manager-status can check the number of threads, which IPs were connected, etc. -->

<!-- manager-gui provides access to the status pages and the tomcat manager web -->
<!-- console. Accounts with this level of access can do anything through the -->
<!-- traditional tomcat manager web console. This includes deploying/undeploying -->
<!-- apps, viewing stats, generating leak detection diagnostics, expiring -->
<!-- sessions, etc. -->

<!-- manager-script, provides all the functionality that manager-gui provides -->
<!-- but using the text interface instead of the html gui. If you are an app -->
<!-- server administrator who loves the command-line, the manager-script role is -->
<!-- for you. One item to note is that the context path for the text interface -->
<!-- has changed in Tomcat 7 so existing scripts may need to be reworked. -->

<!-- manager-jmx provides access to the jmxproxy, which is something monitoring -->
<!-- tools & scripts, administrators, and developers may find useful. In -->
<!-- addition, this role also has access to the status pages. Existing scripts -->
<!-- should work as-is because, unlike the text interface, the context path for -->
<!-- the jmxproxy has not changed. -->

<!-- manager-status provides the users assigned to that role with access to the -->
<!-- statistics that tomcat provides like current threads, max threads, etc. -->
<!-- Users belonging to this role will be able to access the Status link on the -->
<!-- main tomcat index page but will receive a 403 - Access Denied when -->
<!-- attempting to access the Tomcat Manager. -->

<!-- All four roles provide access to the status pages.   -->

<!-- The "admin" role has been broken down further which allows for access -->
<!-- control to the Host-Manager application. There are two roles, "admin-gui" -->
<!-- and "admin-script". Like the manager-* roles, both admin roles provide -->
<!-- access to the status pages. The "admin-gui" role in Tomcat 7 now provides -->
<!-- access to the host-manager HTML console while the "admin-script" role -->
<!-- provides access to the host-manager text interface. -->

  <role rolename="tomcat"/>
  <role rolename="manager-gui"/>
  <role rolename="manager-script"/>
  <role rolename="manager-jmx"/>
  <role rolename="manager-status"/>
  <role rolename="admin-gui"/>
  <role rolename="admin-script"/>
  <user username="tomcat" password="123456" roles="tomcat"/>
  <user username="manager" password="123456" roles="manager-gui,manager-script,manager-jmx,manager-status"/>
  <user username="admin" password="123456" roles="admin-gui,admin-script"/>

  <!-- <role rolename="tomcat"/> -->
  <!-- <role rolename="role1"/> -->
  <!-- <user username="tomcat" password="tomcat" roles="tomcat"/> -->
  <!-- <user username="both" password="tomcat" roles="tomcat,role1"/> -->
  <!-- <user username="role1" password="tomcat" roles="role1"/> -->
</tomcat-users>

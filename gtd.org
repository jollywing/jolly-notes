

* GTD
** Hack CasparCG server
*** build and run it
*** find the place to hack
*** hack it.
** Items to buy
*** 豆浆机
*** 平底休闲鞋
*** 裤子
*** T shirt
*** samsung cell phone
*** DONE 风扇
    CLOSED: [2014-05-13 周二 15:23]
** ZhouAiMin's Quest
** offline activities
*** search offline activities on douban
*** select 2 activity
*** schedule them.
** boy's fair and cloth
*** check boy's cloth on ZhiHu
*** check boy's hair
** DONE Debug program ls.c for XiaoXiao
   CLOSED: [2014-05-14 周三 09:57]
* Compare streamer
** peer streamer
** myseelite
** p2pcenter
* Javascript
** System Object
1. process
2. console
** boolean
| null           | FALSE |
| undefined      | FALSE |
| Object         | TRUE  |
| function       | TRUE  |
| 0              | FALSE |
| 1              | TRUE  |
| 0、1之外的数字 | TRUE  |
| 字符串         | TRUE  |
| ""(空字符串)   | FALSE |

如果&&左侧表达式的值为真值，则返回右侧表达式的值；否则返回左侧表达式的值。

#+BEGIN_EXAMPLE
var i=""&&"真值";//->i=""  
i="真值"&&"其他真值";//->i="其他真值"  
i="真值"&&"";//->i=""  
#+END_EXAMPLE
 
如果||左侧表达式的值为真值，则返回左侧表达式的值；否则返回右侧表达式的值。
#+BEGIN_EXAMPLE
var i=""||"真值";//->i="真值"  
i="真值"||"其他真值";//->i="真值"  
i="真值"||"";//->i="真值"  
#+END_EXAMPLE
 
* C++
** auto
** wchar_t, wstring
** lambda function
http://www.devdiv.com/c_lambda_-blog-124976-12996.html
* Node.js
** introduction
Node.js 服务端(脱离浏览器环境)的javascript
Node.js使用了Google的V8虚拟机（Google的Chrome浏览器使用的JavaScript执行环境），
来解释和执行JavaScript代码。 
Node.js事实上既是一个运行时环境，同时又是一个库。 
使用Node.js时，我们不仅仅在实现一个应用，同时还实现了整个HTTP服务器。
** install
1. goto http://nodejs.org/download/, download a binary archive.
2. tar xzvf /path/to/the/nodejs/archive.
3. add the following code to your .profile.
   #+BEGIN_SRC sh
   node_js_path=~/pkgs/node-v0.10.26-linux-x64/bin
   if [ -d $node_js_path ]
   then
   PATH=$PATH:$node_js_path
   fi

   export PATH
   #+END_SRC
4. =\. .profile=, then you can use node and npm
5. If node complains `can not find module xxx', you need set environment variable NODE_PATH:
   #+BEGIN_SRC sh
   node_js_root=~/pkgs/node-v0.10.26-linux-x64
   NODE_PATH=${node_js_root}/lib/node_modules/npm/lib
   NODE_PATH=$NODE_PATH:${node_js_root}/lib/node_modules/npm/node_modules
   export NODE_PATH
   #+END_SRC
6. If you import module with absolute path or relative path, node will search the file with same name and with extension .js or json.
   If you import module without path, it will search node_modules under the same directory.
   If node can not find node_modules dir, it will goto the parent dir to look for mode_modules until the root `/' is reached.
   If node can still not find node_modules, it resort to NODE_PATH.

** Tutorial
1. http://www.nodebeginner.org/index-zh-cn.html Node入门
   https://github.com/manuelkiessling/NodeBeginnerBook
** Notes
1. Node有一些核心模块，被编译进Node的二进制中，如http, child_process, fs (manipulate file system)
2. npm install numeral; formatting and manipulating numbers.
3. npm install clivas; A *interesting* library to manipulate terminal as a canvas.

* tools
** git
*** Usage
1. create repository jolly-notes on [[https://github.com/][git-hub]]
2. =git clone https://github.com/jollywing/jolly-notes.git=
3. change your cotents && commit to local (=git add= and =git commit=)
4. =git remote add origin https://github.com/jollywing/jolly-notes.git=
5. =git remote set-url origin https://jollywing@github.com/jollywing/jolly-notes.git=
   Important! if you skip this step, you'll get error when you push.
   The error is like: "error: The requested URL returned error: 403 while accessing ..."
6. =git push -u origin master=
7. In another location, you can  =git pull origin master=
8. try *rebase*.
*** msysgit (Git on Windows)
When you clone a remote repository, you'll meet a error:

#+BEGIN_EXAMPLE
$ git clone https://github.com/jollywing/jolly-notes.git
Initialized empty Git repository in e:/jollywing/jolly-notes/.git/
error: error setting certificate verify locations:
  CAfile: /bin/curl-ca-bundle.crt
  CApath: none
 while accessing https://github.com/jollywing/jolly-notes.git/info/refs

fatal: HTTP request failed
#+END_EXAMPLE

Solution:
: git config --global http.sslcainfo "/e/jollywing/installed/Git/bin/curl-ca-bundle.crt"

*** errors
1. non-fast-forward error, somebody else has commited something to the remote repository,
   before you push, you nell pull at first.
*** github
1. delete a repository. Open the repository page, click /settings/ in the
   right pane, click the button "delete this repository" in the bottom.
*** books
git-简易指南: http://www.bootcss.com/p/git-guide/
** android
1. the best file manager: es file manager
2. android terminal emulator.
   The commands supported:
   https://github.com/jackpal/Android-Terminal-Emulator/wiki/Android-Shell-Command-Reference
** automake
1. Makefile.am is the input file of /automake/. /automake/ handle a
   Makefile.am, will create Makefile.in, which will be used by /configure/
   to create Makefile.
* Notes
** address
北京市石景山区石景山路31号盛景国际大厦C座12层  邮编：100043
** company email
user: w*j*****
passwd: j****w***
question: my good boy?
answer: 1****6
** wirless network
1. apecn-work; passwd: apecn-654
2. live; passwd: zh***h**f***
** sopcast account
- =jiqing_wu@***.com; t******j=
** linux
account:r; 5*****j***y
* Emacs
** custom emacs home
** make theme
~/.emacs.d/spring-theme.el

#+BEGIN_SRC elisp
(deftheme spring
  "A black on light green theme, to protect your eyes.")

(let ((class '((class color) (min-colors 89))))
  (custom-theme-set-faces
   'spring
   `(default ((,class (:background "#99bb99" :foreground "black"))))
   ... ...
  ))

(provide-theme 'spring)
#+END_SRC
** gnus
M-x gnus-other-frame
* IT News
1. 2013.4, 百度继收购爱奇艺之后，收购了PPS。
2. 优酷收购土豆网后成为第一阵营，百度携手爱奇艺、PPS争夺第二阵营，搜狐视频、腾讯视频等都在步步紧逼，抢占视频行业市场。
3. peerflix 为用户交换DVD提供一个平台，peerflix 对每笔交换收取一定的费用。
4. BAT三巨头: BaiDu, ALi, Tecent.
5. 阿里巴巴收购高德导航，集成快的打车。
6. 腾讯开发的英雄联盟是目前全球在线人数最高的游戏，超过了魔兽世界。
7. 地图是百度的竞争力所在。
* BTlive
* btsync
ref: http://www.bittorrent.com/sync
AL32ADHNEBXGOLZVH7QBBNDY5UWREKAWZ

set up linux version

* Someday
** worktile: 协同工作
** 机顶盒的结构和原理
** Firewall traversing

** 科研项目
1. 国家科技项目申报


** 编程珠玑
* VS
1. Jump to Definition, F12; C--(视图=>向后导航), 返回。
2. Go to line..., C-g.
3. Jump the balanced 括号, C-]
1. 强迫智能感知：Ctrl+J；
2.强迫智能感知显示参数信息：Ctrl-Shift-空格；
3.格式化整个块：Ctrl+K+F
4. 检查括号匹配(在左右括号间切换): Ctrl +]
5. 选中从光标起到行首(尾)间的代码: Shift + Home(End)
6. 在方法定义和调用之点切换：Ctrl+Shift+7(8)
7. 设置断点：F9
8. 使用Tab增加缩进，Shift+Tab减少缩进
9. 格式化整篇代码： Ctrl+K, F
10. 设置书签：Ctrl+B+T，跳转书签：Ctrl+B+N
11、编辑区视图最大化：Alt+Shift+Enter;
12、注释选定块：Control+K,Control+C
13、取消注释块：Control+K,Control+U
14、查找和替换：Control+F\Control+H
15、转跳到定义，很有用的快捷键：F12
16、查找所有引用：Shift+F12
17、删除整行：Control+L
18、撤销：Control+Z
19、反撤销：Control+Y(如果是mac用户+fn)
20、折叠代码定义：CTRL + M, CTRL + O
21、展开代码定义：CTRL + M, CTRL + L
22、查看上次阅读处\反上次查看处：Control+"-"\Control+Shift+"-"
23、CTRL + G转到…
24、CTRL + U转小写
25、CTRL + SHIFT + U转大写
 
其他快捷键：
Ctrl+E,D ----格式化全部代码
Ctrl+E,F ----格式化选中的代码
CTRL + SHIFT + B生成解决方案
CTRL + F7 生成编译
CTRL + O 打开文件
CTRL + SHIFT + O打开项目
CTRL + SHIFT + C显示类视图窗口
F4 显示属性窗口
SHIFT + F4显示项目属性窗口
CTRL + SHIFT + E显示资源视图
F12 转到定义
CTRL + F12转到声明
CTRL + ALT + J对象浏览
CTRL + ALT + F1帮助目录
CTRL + F1 动态帮助
F1 帮助
SHIFT + F1当前窗口帮助
CTRL + ALT + F3帮助-搜索
SHIFT + ALT + ENTER全屏显示
CTRL + -向后定位
CTRL + SHIFT + -向前定位
CTRL + F4关闭文档窗口
CTRL + PAGE DOWN光标定位到窗口上方
CTRL + PAGE UP光标定位到窗口下方
CTRL + F6
CTRL + TAB下一个文档窗口
CTRL + SHIFT + F6
CTRL + SHIFT + TAB上一个文档窗口
ALT + F6下一个面板窗口
CTRL + K, CTRL + L取消remark
CTRL + K, CTRL + C注释选择的代码
CTRL + K, CTRL + U取消对选择代码的注释
CTRL + M, CTRL + O折叠代码定义
CTRL + M, CTRL + L展开代码定义
CTRL + DELETE删除至词尾
CTRL + BACKSPACE删除至词头
SHIFT + TAB取消制表符
CTRL + SHIFT + END选择至文档末尾
CTRL + SHIFT + HOME选择至文档末尾开始
SHIFT + END选择至行尾
SHIFT + HOME选择至行开始处
SHIFT + ALT + END垂直选择到最后尾
SHIFT + ALT + HOME垂直选择到最前面
CTRL + SHIFT + PAGE UP选择至本页前面
CTRL + SHIFT + PAGE DOWN选择至本页后面
CTRL + END文档定位到最后
CTRL + HOME文档定位到最前
CTRL + A全选
CTRL + W选择当前单词
CTRL + K, CTRL + P上一个标签
CTRL + K, CTRL + N下一个标签
ALT + F10调试-ApplyCodeChanges
CTRL + ALT+ Break停止调试
CTRL + SHIFT + F9 取消所有断点
CTRL + F9允许中断
CTRL + SHIFT + F5调试-重新开始
F5运行调试
CTRL + F5运行不调试
F10跨过程序执行
F11单步逐句执行
CTRL + J列出成员
CTRL + PAGE DOWN下一个视图
CTRL + B格式-粗体
CTRL + SHIFT + T格式-文字缩进
调试快捷键
F6: 生成解决方案
Ctrl+F6: 生成当前项目
F7: 查看代码
Shift+F7: 查看窗体设计器
F5: 启动调试
Ctrl+F5: 开始执行(不调试)
Shift+F5: 停止调试
Ctrl+Shift+F5: 重启调试
F9: 切换断点
Ctrl+F9: 启用/停止断点
Ctrl+Shift+F9: 删除全部断点
F10: 逐过程
Ctrl+F10: 运行到光标处
F11: 逐语句
编辑快捷键
Shift+Alt+Enter: 切换全屏编辑
Ctrl+B,T / Ctrl+K,K: 切换书签开关
Ctrl+B,N / Ctrl+K,N: 移动到下一书签
Ctrl+B,P: 移动到上一书签
Ctrl+B,C: 清除全部标签
Ctrl+I: 渐进式搜索
Ctrl+Shift+I: 反向渐进式搜索
Ctrl+F: 查找
Ctrl+Shift+F: 在文件中查找
F3: 查找下一个
Shift+F3: 查找上一个
Ctrl+H: 替换
Ctrl+Shift+H: 在文件中替换
Alt+F12: 查找符号(列出所有查找结果)
Ctrl+Shift+V: 剪贴板循环
Ctrl+左右箭头键: 一次可以移动一个单词
Ctrl+上下箭头键: 滚动代码屏幕，但不移动光标位置。
Ctrl+Shift+L: 删除当前行
Ctrl+M,M: 隐藏或展开当前嵌套的折叠状态
Ctrl+M,L: 将所有过程设置为相同的隐藏或展开状态
Ctrl+M,P: 停止大纲显示
Ctrl+E,S: 查看空白
Ctrl+E,W: 自动换行
Ctrl+G: 转到指定行
Shift+Alt+箭头键: 选择矩形文本
Alt+鼠标左按钮: 选择矩形文本
Ctrl+Shift+U: 全部变为大写
Ctrl+U: 全部变为小写
代码快捷键
Ctrl+J / Ctrl+K,L: 列出成员
Ctrl+Shift+空格键 / Ctrl+K,P: 参数信息
Ctrl+K,I: 快速信息
Ctrl+E,C / Ctrl+K,C: 注释选定内容
Ctrl+E,U / Ctrl+K,U: 取消选定注释内容
Ctrl+K,M: 生成方法存根
Ctrl+K,X: 插入代码段
Ctrl+K,S: 插入外侧代码
F12: 转到所调用过程或变量的定义
窗口快捷键
Ctrl+W,W: 浏览器窗口
Ctrl+W,S: 解决方案管理器
Ctrl+W,C: 类视图
Ctrl+W,E: 错误列表
Ctrl+W,O: 输出视图
Ctrl+W,P: 属性窗口
Ctrl+W,T: 任务列表
Ctrl+W,X: 工具箱
Ctrl+W,B: 书签窗口
Ctrl+W,U: 文档大纲
Ctrl+D,B: 断点窗口
Ctrl+D,I: 即时窗口
Ctrl+Tab: 活动窗体切换
Ctrl+Shift+N: 新建项目
Ctrl+Shift+O: 打开项目
Ctrl+Shift+S: 全部保存
Shift+Alt+C: 新建类
Ctrl+Shift+A: 新建项
VS2005的隐藏快捷键


数据结构是研究数据元素间关系的学科。
算法具有五个基本特性：输入、输出、有穷性(有边界，不会无限循环)、确定性、可行性。

好的算法：正确性、可读性、健壮性、时空开销小。

算法分析：把基本操作的数量与输入规模联系起来。

时间复杂度分析：
加法常数可以忽略。
与最高项相乘的系数也可以忽略。
最高次项指数大的，运行时间增长更快。
常数和次要项都可以忽略，关注主项（最高阶项）的阶数。

T(n) = O(f(n)) 大O记法。
O(1) 常数阶； O(n) 线性阶； O(n^2) 平方阶； O(2^n) 指数阶。
: O(1) < O(logn) < O(n) < O(nlogn) < O(n^2) < O(n^3) < O(2^n) < O(n!) < O(n^n)
如果算法的时间复杂度是 O(2^n) 或是 O(n!) 除非 n 很小，
（100就已经非常大了），否则这个算法的复杂度是不可接受的。

推导大O阶的方法：
1. 用 1 替代加法常数
2. 只保留最高阶项
3. 如果最高阶项不是1，去除和最高阶项相乘的常数

通常，我们提到的运行时间都是最坏情况的运行时间。

链表，头指针和头结点。
头指针是指向第一个结点的指针。
头结点是第0个结点。它的值无意义，但它存储了第一个结点的地址。

用数组实现的链表叫静态链表。
每个数组元素有两个域，一个是有用数据，另一个叫做cur(游标)，即后继元素的下标。

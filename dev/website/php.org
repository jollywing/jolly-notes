
php中文手册, http://php.net/manual/zh/
php代码在线执行, http://www.mcqyy.com/RunCode/php/

* 环境部署
在windows下安装PHP，可以安装XAMPP(https://www.apachefriends.org/zh_cn/index.html)。下载windows后安装即可，可以定制要安装的程序。

** LAMP, LEMP
Linux Apache Mysql Php.
Linux Nginx Mysql Php. 其中 Nginx 发音同 engine x。
国内目前用Nginx的用户多于Apache用户。

*** php-fpm

FastCGI Process Manager for PHP
nginx 就是靠转发php脚本给 fastcgi服务器，来解析php脚本的。

* 字符串
单引号和双引号都能表示字符串。
但双引号字符串可以包含转义字符串，而单引号不能。

* BOOLEAN
php中有boolean类型吗？如何表示?
0和0.0是FALSE吗？(c中是，java中是, lisp中是吗, python中是吗，javascript似乎是)
""是FALSE吗？
"0"是FALSE吗？
空数组 =array()= 是不是FALSE?
NULL是不是FALSE？

* 面向对象
** 从关联数组生成对象
#+BEGIN_SRC php
<?php
$obj = (object) array('foo' => 'bar', 'property' => 'value');
echo $obj->foo; // prints 'bar'
?>
#+END_SRC

1. 强制类型转换, =(type)expression=.
2. 数组定义, ~array('key' => 'value', 'key' => 'value', ...)~;
3. 对象访问成员, ->.

** 构造与析构
因为php不支持重载，所以不能有多个构造函数。

** public, private, protected
http://php.net/manual/en/language.oop5.visibility.php

方法默认的可见范围是 public.
#+BEGIN_QUOTE
Class methods may be defined as public, private, or protected. Methods declared without any explicit visibility keyword are defined as public.
#+END_QUOTE

同一个类的实例可以互相访问private和protected成员.
#+BEGIN_QUOTE
Objects of the same type will have access to each others private and protected members even though they are not the same instances. This is because the implementation specific details are already known when inside those objects.
#+END_QUOTE

* TDD
http://tddftw.com/adding-tests-to-legacy-code-part-1/

http://scar.tw/article/2013/01/09/php-phar-create-and-use/Phar
(PHP Archive)它是PHP的extension，就像是Java的jar一樣可以用來打包程式碼，可讓專案易於散佈並安裝使用

PHP Warning:  realpath(): open_basedir restriction in effect. File(/usr/bin/phpunit) is not within the allowed path(s): (/srv/http/:/home/:/tmp/:/usr/share/pear/) in /usr/bin/phpunit on line 3
PHP Warning:  Phar::mapPhar(): open_basedir restriction in effect. File(/usr/bin/phpunit) is not within the allowed path(s): (/srv/http/:/home/:/tmp/:/usr/share/pear/) in /usr/bin/phpunit on line 714

PHPUNIT https://phpunit.de/
中文手册 https://phpunit.de/manual/current/zh_cn/phpunit-book.html
支持的assert方法 https://phpunit.de/manual/current/zh_cn/phpunit-book.html#appendixes.assertions
* frameworks
** ci(CodeIgniter)
1. http://codeigniter.org.cn, CI 中国.
*** Load library
http://stackoverflow.com/questions/17132177/codeigniter-where-and-when-should-i-call-this-load-database

You have three choices (that I can think of).

If you require it almost everywhere in your project, use the /application/config/autoload.php file, in which you'll find the following statement:

: $autoload['libraries'] = array();
which you can change to

: $autoload['libraries'] = array('database');

This is the easiest method, but it does add overhead since the database class will be loaded even when you do not require it.

If you find that you need to use it for almost every method in a particular model you can call $this->load->database(); in the constructor of that particular model, for example:

#+BEGIN_SRC php
class Forums_model extends CI_Model{

   function __construct()
   {
       // Call the parent constructor
       parent::__construct();

       $this->load->database();
   }

   function get_records()
   {
       $this->db->get('table');
       //this now works in every method in this model
   }
}
#+END_SRC

which will make the database class available to every method in that model. This is a more efficient option than the second and not as tedious as the third, probably making it the most balanced option.

You can also, of course, choose to load it in every method that requires it using $this->load->database(); This adds the least overhead, theoretically making it the most efficient. However, doing this is very tedious.

All three will work, it's your choice whether you want it to be easy, or efficient. (My personal recommendation is choice 2)

*** $this->load
*** TDD
http://taiar.github.io/php/2013/11/08/testing-codeigniter-applications-with-phpunit.html

==============================
GTK编程笔记
==============================

:create: 2011-12-19
:update: |date|

.. |date| date::

.. contents:: 目录

关于GTK+
==============================

GTK+用于制作程序的交互界面，和QT一起是两种主要的Linux应用UI函数库。
它依赖于以下函数库：

- GLib：通用的函数库，包括数据类型，字符串函数，错误通知，消息队
  列和线程。
- Pango: 用来实现国际化和本地化。
- ATK: 提供了快捷键服务。
- GDK：为GTK+提供了一些底层的“图形实现”和“窗口实现”的方法，位于X
  Server和GTK+之间。但在GTK+的新版本中，越来越多的函数由 `cairo` 来
  实现。
- GdkPixbuf：用于加载图像和维护图像缓存。
- Cairo：用于制作二维图像。

编译GTK+程序
==============================

编译GTK+程序有一个非常方便的工具: `pkg-config` 。
如果我们想使用某种函数库， `pkg-config` 可以提供所需的 include 和
lib 的位置。如： ::

  gcc -o simple simple.c `pkg-config --cflags --libs gtk+-2.0`

关于GTK+的编码规范
==============================

- 文件名：单词小写，单词之间用下划线分割。
- 函数命名：小写单词加下划线。
- 面向对象的函数命名方式：用主语+谓语的形式取代动词+宾语的方式。如
  与GtkWindow相关的函数，gtk_window_new，
  gtk_window_set_decorated等，而且会把GtkWindow作为第一个参数，除
  了返回GtkWindow指针的情况。
- 结构、枚举、联合命名为单词连写并单词首字母大写，如GtkDialog。
- 宏名和枚举常量：单词大写，多单词之间用下划线分隔。
- 变量名：单词小写，单词之间用下划线分割。

布局管理
==============================

布局容器：

- GtkAlignment。只能放置一个子构件，因此常和GtkBox配合使用。如把
  一下向下对齐的alignment放在一个vbox中，则向box中添加构件时，优
  先靠下放。如果把一个box放在一个靠右对齐的alignment中，则盒子就
  放在右边。
- GtkFixed，并不属于自动布局的容器。通常用于游戏或绘图软件。
- GtkBox。GtkVBox把它管理的构件排成一列，GtkHBox把它管理的构件排
  成一行。
- GtkTable。几行几列。似乎行高和列宽都是均匀分布的。

事件系统
==============================

一个事件就是从X Window服务器传出来的一个消息。
当一个事件发生时，GTK+就产生一个对应的信号。

构件
==============================

GtkLabel
------------------------------

label的文字可以用标记语言，如： ::

    char *str = "<b>Hello</b>, the world!";
    label = gtk_label_new(NULL);
    gtk_label_set_markup(GTK_LABEL(label), str);

